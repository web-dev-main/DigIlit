#!/bin/bash
# ═══════════════════════════════════════════════════════════════════════════
# CLAUDE FIX APPLIER
# ═══════════════════════════════════════════════════════════════════════════
# Applies patches and fixes generated by Claude AI
# ═══════════════════════════════════════════════════════════════════════════

set -e

PROJECT_ROOT="/workspaces/Dig-lit"
PATCHES_DIR="${PROJECT_ROOT}/.claude/context/patches"
CONTEXT_DIR="${PROJECT_ROOT}/.claude/context"

# Colors
C_RESET='\033[0m'
C_GREEN='\033[32m'
C_RED='\033[31m'
C_YELLOW='\033[33m'
C_CYAN='\033[36m'

log_success() { echo -e "${C_GREEN}✅ $1${C_RESET}"; }
log_error() { echo -e "${C_RED}❌ $1${C_RESET}"; }
log_warn() { echo -e "${C_YELLOW}⚠️  $1${C_RESET}"; }
log_info() { echo -e "${C_CYAN}ℹ️  $1${C_RESET}"; }

cd "$PROJECT_ROOT"

echo -e "\n🤖 Applying Claude AI Fixes...\n"

# Check if patches directory exists
if [ ! -d "$PATCHES_DIR" ]; then
    log_error "No patches directory found at $PATCHES_DIR"
    log_info "Run 'npm run audit:claude' first to generate patches"
    exit 1
fi

# Count patch files
patch_count=$(find "$PATCHES_DIR" -name "*.patch" -o -name "*.diff" | wc -l)

if [ "$patch_count" -eq 0 ]; then
    log_warn "No patch files found in $PATCHES_DIR"
    log_info "Claude should generate patches in .claude/context/patches/"
    exit 1
fi

log_info "Found $patch_count patch files"

# Apply patches
applied_count=0
failed_count=0

for patch_file in "$PATCHES_DIR"/*.patch "$PATCHES_DIR"/*.diff; do
    if [ -f "$patch_file" ]; then
        log_info "Applying: $(basename "$patch_file")"
        
        if patch -p1 < "$patch_file" 2>/dev/null; then
            log_success "Applied: $(basename "$patch_file")"
            ((applied_count++))
        else
            log_error "Failed to apply: $(basename "$patch_file")"
            ((failed_count++))
        fi
    fi
done

# Summary
echo ""
if [ "$applied_count" -gt 0 ]; then
    log_success "Successfully applied $applied_count patches"
    
    # Run validation
    log_info "Validating fixes..."
    if bash scripts/development/deep-audit.sh > /dev/null 2>&1; then
        log_success "All fixes validated successfully!"
    else
        log_warn "Some issues may remain after patching"
        log_info "Run 'bash scripts/development/deep-audit.sh' for details"
    fi
fi

if [ "$failed_count" -gt 0 ]; then
    log_error "Failed to apply $failed_count patches"
    log_info "Manual intervention may be required"
fi

# Create fix report
cat > "${CONTEXT_DIR}/fixes.log" <<EOF
# 🤖 Claude Fix Application Report

**Generated:** $(date)

## Summary
- Total Patches: $patch_count
- Applied: $applied_count
- Failed: $failed_count

## Applied Patches
$(find "$PATCHES_DIR" -name "*.patch" -o -name "*.diff" | while read patch; do
    echo "- $(basename "$patch")"
done)

## Next Steps
1. Review changes: \`git diff\`
2. Run full audit: \`bash scripts/development/deep-audit.sh\`
3. Commit fixes: \`git add . && git commit -m "fix: apply Claude patches"\`

